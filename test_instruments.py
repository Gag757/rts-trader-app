import asyncio
from tinkoff.invest import AsyncClient

TOKEN = "t.T3Y_FHopd2AHt6rHo2kG-cDcSe9vxjtXsMwCM3LzpYEZqgEII_dWtUwqjJ1utKZp3H-VgArGbPla-3K95MbteA"

async def test_instruments():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
    try:
        async with AsyncClient(TOKEN) as client:
            print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
            
            # –¢–µ—Å—Ç —Ñ—å—é—á–µ—Ä—Å–æ–≤
            try:
                futures = await client.instruments.futures()
                rts_futures = [f for f in futures.instruments if "RTS" in f.name.upper()]
                print(f"‚úÖ –§—å—é—á–µ—Ä—Å—ã: –Ω–∞–π–¥–µ–Ω–æ {len(rts_futures)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –†–¢–°")
                for f in rts_futures[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   - {f.name} (FIGI: {f.figi})")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ—å—é—á–µ—Ä—Å–æ–≤: {e}")
            
            # –¢–µ—Å—Ç –∞–∫—Ü–∏–π
            try:
                stocks = await client.instruments.shares()
                rts_stocks = [s for s in stocks.instruments if "RTS" in s.name.upper()]
                print(f"‚úÖ –ê–∫—Ü–∏–∏: –Ω–∞–π–¥–µ–Ω–æ {len(rts_stocks)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –†–¢–°")
                for s in rts_stocks[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   - {s.name} (FIGI: {s.figi})")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ü–∏–π: {e}")
            
            # –¢–µ—Å—Ç ETF
            try:
                etfs = await client.instruments.etfs()
                rts_etfs = [e for e in etfs.instruments if "RTS" in e.name.upper()]
                print(f"‚úÖ ETF: –Ω–∞–π–¥–µ–Ω–æ {len(rts_etfs)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –†–¢–°")
                for e in rts_etfs[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   - {e.name} (FIGI: {e.figi})")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ ETF: {e}")
            
            # –¢–µ—Å—Ç –æ–±–ª–∏–≥–∞—Ü–∏–π
            try:
                bonds = await client.instruments.bonds()
                rts_bonds = [b for b in bonds.instruments if "RTS" in b.name.upper()]
                print(f"‚úÖ –û–±–ª–∏–≥–∞—Ü–∏–∏: –Ω–∞–π–¥–µ–Ω–æ {len(rts_bonds)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –†–¢–°")
                for b in rts_bonds[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   - {b.name} (FIGI: {b.figi})")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–ª–∏–≥–∞—Ü–∏–π: {e}")
                
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_instruments())






